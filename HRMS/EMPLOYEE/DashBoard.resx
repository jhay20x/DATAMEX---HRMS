<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="MenuHide6Button.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>